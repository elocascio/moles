import pandas as pd
import numpy as np
import base64
from io import BytesIO
from sys import argv
import matplotlib.pyplot as plt
import argparse

parser = argparse.ArgumentParser()
parser.add_argument("-xvg", type=str)
parser.add_argument("-title", type=str)

parser.add_argument("-filename", type=str)
parser.add_argument("-divx", type=int, default=1)
parser.add_argument("-divy", type=int, default=1000)
parser.add_argument("-xlabel", type=str)
parser.add_argument("-ylabel", type=str)
parser.add_argument("-ylim", type=str)
parser.add_argument("-xlim", type=str)

args = parser.parse_args()

# plot_xvg(args.xvg, args.title, args.filename, args.divx, args.divy, args.xlabel, args.ylabel, args.xlim, args.ylim)
"""plot xvg file generated by gromacs and save image
    xvg: path of file xvg
    title: title of the plot
    xlabel
    ylabel        
    return
        array1, array2, image base64 decoded"""
a = []
b = []
with open(args.xvg) as xvg:
    for line in xvg.readlines():
        if line.startswith("#") or line.startswith("@"):
            pass
        else:
            x = line.split()
            a.append(float(x[0]))
            b.append(float(x[1]))
    a = np.array(a)
    b = np.array(b)
    plt.title(args.title)
    plt.xlabel(args.xlabel)
    plt.ylabel(args.ylabel)
    if args.xlim:
        xlim = args.xlim
        plt.xlim(int(xlim.split("-")[0]), int(xlim.split("-")[1]))
    if args.ylim:
        ylim = args.ylim
        plt.ylim(int(ylim.split("-")[0]), int(ylim.split("-")[1]))
    plt.plot(a / int(args.divx), b / int(args.divy))

    plt.savefig(args.filename, format="png", dpi=900)
    plt.close()

# if __name__=='__main__':
#        script, xvg, title, filename, divx, divy, xlabel, ylabel = argv
#        plot_xvg(xvg, title, filename, divx, divy, xlabel, ylabel)
